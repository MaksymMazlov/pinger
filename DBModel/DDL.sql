-- MySQL Script generated by MySQL Workbench
-- Thu Apr 22 20:48:03 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `tarif_plan`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tarif_plan` ;

CREATE TABLE IF NOT EXISTS `tarif_plan` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `account_resource_limit` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `account` ;

CREATE TABLE IF NOT EXISTS `account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `created` DATETIME NOT NULL,
  `token` VARCHAR(45) NULL,
  `tarif_plan_id` INT NOT NULL,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  PRIMARY KEY (`id`),
  INDEX `tarif_plan_id_idx` (`tarif_plan_id` ASC),
  CONSTRAINT `tarif_plan_id`
    FOREIGN KEY (`tarif_plan_id`)
    REFERENCES `tarif_plan` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `account_resource`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `account_resource` ;

CREATE TABLE IF NOT EXISTS `account_resource` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `host` VARCHAR(255) NOT NULL,
  `monitoring_interval` INT NOT NULL,
  `sms_notification` TINYINT NOT NULL DEFAULT 0,
  `created` DATETIME NOT NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_account_resource_to_user_idx` (`account_id` ASC),
  CONSTRAINT `fk_account_resource_to_user`
    FOREIGN KEY (`account_id`)
    REFERENCES `account` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `monitoring_by_day`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `monitoring_by_day` ;

CREATE TABLE IF NOT EXISTS `monitoring_by_day` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `time` TIME NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `account_resource_id` INT NOT NULL,
  `available` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_monitoring_by_day_to_account_resource_idx` (`account_resource_id` ASC),
  CONSTRAINT `fk_monitoring_by_day_to_account_resource`
    FOREIGN KEY (`account_resource_id`)
    REFERENCES `account_resource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `monitoring_by_week`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `monitoring_by_week` ;

CREATE TABLE IF NOT EXISTS `monitoring_by_week` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `account_resource_id` INT NOT NULL,
  `available` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_monitoring_by_week_to_account_resource_id_idx` (`account_resource_id` ASC),
  CONSTRAINT `fk_monitoring_by_week_to_account_resource_id`
    FOREIGN KEY (`account_resource_id`)
    REFERENCES `account_resource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `monitoring_events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `monitoring_events` ;

CREATE TABLE IF NOT EXISTS `monitoring_events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `date_time` DATETIME NOT NULL,
  `duration` INT NOT NULL,
  `reason` VARCHAR(255) NOT NULL,
  `account_resource_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_monitoring_events_to_account_resource_id_idx` (`account_resource_id` ASC),
  CONSTRAINT `fk_monitoring_events_to_account_resource_id`
    FOREIGN KEY (`account_resource_id`)
    REFERENCES `account_resource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `account_settings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `account_settings` ;

CREATE TABLE IF NOT EXISTS `account_settings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(255) NOT NULL,
  `value` VARCHAR(255) NOT NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_account_settings_to_account_idx` (`account_id` ASC),
  UNIQUE INDEX `idx_account_id_key` (`key` ASC, `account_id` ASC),
  CONSTRAINT `fk_account_settings_to_account`
    FOREIGN KEY (`account_id`)
    REFERENCES `account` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
